---
description: UI Design Pattern for Family Fun Plannings - Consistent styling and component structure
globs: 
alwaysApply: false
---
This style guide defines the consistent design patterns and UI elements to maintain a cohesive visual identity across all components in the Family Fun Plannings application.

---
globs: ["src/app/components/**/*.html"]
---

# Family Fun Plannings UI Design Pattern

## Layout Structure

### Page Container
```html
<div class="min-h-screen flex items-center justify-center bg-gradient-to-br from-blue-500 to-purple-600 p-4">
  <!-- Content goes here -->
</div>
```

### Content Card
```html
<div class="w-full max-w-md bg-white rounded-2xl shadow-xl p-8 space-y-6">
  <!-- Card content goes here -->
</div>
```

### Header Section
```html
<div class="text-center">
  <h1 class="text-3xl font-bold text-gray-900 mb-2">Title Here</h1>
  <p class="text-gray-600">Subtitle description here</p>
</div>
```

## Form Elements

### Form Container
```html
<form [formGroup]="formName" (ngSubmit)="onSubmit()" class="space-y-4">
  <!-- Form fields go here -->
</form>
```

### Input Field Template
```html
<div>
  <label for="fieldId" class="block text-sm font-medium text-gray-700 mb-1">Label</label>
  <div class="relative">
    <input
      id="fieldId"
      type="text"
      formControlName="fieldName"
      class="w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors"
      [ngClass]="{'border-red-500': hasError('fieldName'), 'border-gray-300': !hasError('fieldName')}"
      placeholder="Placeholder text"
    >
    <!-- Optional icon -->
    <!-- Error message -->
    <div *ngIf="hasError('fieldName')" class="text-red-500 text-sm mt-1">
      {{ getErrorMessage('fieldName') }}
    </div>
  </div>
</div>
```

### Button Templates

#### Primary Button
```html
<button
  type="submit"
  class="w-full bg-blue-600 text-white rounded-lg px-4 py-2 font-medium hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed transition-colors"
  [disabled]="isSubmitting"
>
  Button Text
</button>
```

#### Secondary Button
```html
<button
  class="flex-1 bg-green-600 text-white rounded-lg px-4 py-2 font-medium hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2 transition-colors"
>
  Button Text
</button>
```

#### Text Button
```html
<button
  type="button"
  class="text-sm font-medium text-gray-600 hover:text-gray-500 focus:outline-none focus:underline transition-colors"
>
  Button Text
</button>
```

### Loading State
```html
<span *ngIf="isSubmitting" class="flex items-center justify-center">
  <svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
    <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
    <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
  </svg>
  Loading...
</span>
```

## Dividers & Sections

### Section Divider with Text
```html
<div class="relative">
  <div class="absolute inset-0 flex items-center">
    <div class="w-full border-t border-gray-300"></div>
  </div>
  <div class="relative flex justify-center text-sm">
    <span class="px-2 bg-white text-gray-500">Section Title</span>
  </div>
</div>
```

### Action Links Section
```html
<div class="text-center">
  <p class="text-sm text-gray-600">
    Descriptive text
    <button
      type="button"
      class="font-medium text-blue-600 hover:text-blue-500 focus:outline-none focus:underline transition-colors"
    >
      Action text
    </button>
  </p>
</div>
```

## Special Components

### Alert Messages
```html
<!-- Error Alert -->
<div *ngIf="errorMessage" class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative" role="alert">
  <span class="block sm:inline">{{ errorMessage }}</span>
</div>

<!-- Success Alert -->
<div *ngIf="successMessage" class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative" role="alert">
  <span class="block sm:inline">{{ successMessage }}</span>
</div>
```

### Password Field with Toggle
```html
<div class="relative">
  <input
    [type]="showPassword ? 'text' : 'password'"
    formControlName="motDePasse"
    class="w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors pr-10"
    [ngClass]="{'border-red-500': hasError('motDePasse'), 'border-gray-300': !hasError('motDePasse')}"
    placeholder="••••••"
  >
  <button
    type="button"
    (click)="togglePasswordVisibility()"
    class="absolute right-2 top-1/2 -translate-y-1/2 text-gray-500 hover:text-gray-700 focus:outline-none"
    aria-label="Toggle password visibility"
  >
    <svg
      xmlns="http://www.w3.org/2000/svg"
      class="h-5 w-5"
      [class.hidden]="showPassword"
      viewBox="0 0 20 20"
      fill="currentColor"
    >
      <path d="M10 12a2 2 0 100-4 2 2 0 000 4z" />
      <path
        fill-rule="evenodd"
        d="M.458 10C1.732 5.943 5.522 3 10 3s8.268 2.943 9.542 7c-1.274 4.057-5.064 7-9.542 7S1.732 14.057.458 10zM14 10a4 4 0 11-8 0 4 4 0 018 0z"
        clip-rule="evenodd"
      />
    </svg>
    <svg
      xmlns="http://www.w3.org/2000/svg"
      class="h-5 w-5"
      [class.hidden]="!showPassword"
      viewBox="0 0 20 20"
      fill="currentColor"
    >
      <path
        fill-rule="evenodd"
        d="M3.707 2.293a1 1 0 00-1.414 1.414l14 14a1 1 0 001.414-1.414l-1.473-1.473A10.014 10.014 0 0019.542 10C18.268 5.943 14.478 3 10 3a9.958 9.958 0 00-4.512 1.074l-1.78-1.781zm4.261 4.26l1.514 1.515a2.003 2.003 0 012.45 2.45l1.514 1.514a4 4 0 00-5.478-5.478z"
        clip-rule="evenodd"
      />
      <path
        d="M12.454 16.697L9.75 13.992a4 4 0 01-3.742-3.741L2.335 6.578A9.98 9.98 0 00.458 10c1.274 4.057 5.065 7 9.542 7 .847 0 1.669-.105 2.454-.303z"
      />
    </svg>
  </button>
</div>
```

## Color Scheme

- Primary: blue-600 (hover: blue-700)
- Secondary: green-600 (hover: green-700)
- Text: gray-900 (headings), gray-600 (body), gray-500 (subtle)
- Background: gradient from blue-500 to purple-600
- Error: red-500 (border), red-100 (background), red-700 (text)
- Success: green-500 (border), green-100 (background), green-700 (text)

## Spacing

- Container padding: p-4
- Card padding: p-8
- Section spacing: space-y-6
- Form field spacing: space-y-4
- Button padding: px-4 py-2
- Input padding: px-4 py-2

## Typography

- Headings: text-3xl, font-bold
- Body text: text-base
- Small text: text-sm
- Labels: text-sm, font-medium

## Transitions

- All interactive elements should include: transition-colors
- Focus states: focus:ring-2, focus:ring-offset-2
- Hover states: hover:bg-{color}-700 for buttons, hover:text-{color}-500 for links

## Accessibility

- All interactive elements should have proper aria-labels
- Form fields should have associated labels
- Error states should be clearly visible
- Focus states should be visible for keyboard navigation
- Loading states should be indicated
- Color contrast should meet WCAG guidelines